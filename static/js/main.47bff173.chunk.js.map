{"version":3,"sources":["components/store/index.js","components/store/reducer.js","components/authentication/authentication.js","components/web-socket-client/index.js","components/call/call.js","components/call-respond/call-respond.js","components/connected/connected.js","components/app.js","index.js","components/call-respond/call-respond.module.css","components/call/call.module.css","components/connected/connected.module.css"],"names":["createStore","state","type","payload","socket","user","name","users","filter","socket_id","calling","incoming_call","RTC","RTCPeerConnection","calling_status","calling_profile","client","call_back","RTCSessionDescriptionInit","React","memo","props","useSelector","Socket","dispatch","useDispatch","Fragment","children","onChange","e","target","value","onClick","console","log","newSocket","url","WebSocket","on","action","signal","onmessage","event","data","JSON","parse","CustomEvent","detail","window","dispatchEvent","err","addEventListener","listener","removeEventListener","send","callbackFunction","callback","stringify","onConnect","onopen","onClose","onclose","onError","onerror","webSocket","rtc","useEffect","createOffer","offerToReceiveVideo","then","sdp","setLocalDescription","args","setRemoteDescription","RTCSessionDescription","addIceCandidate","RTCIceCandidate","IceCandidate","catch","error","currentTarget","connectionState","className","styles","calling_modal","calling_info","calling_info_name","calling_end","calling_accept","createAnswer","candidate","calling_decline","video","useRef","from","stream","streams","current","srcObject","muted","navigator","mediaDevices","getUserMedia","audio","height","outerHeight","setAttribute","onloadedmetadata","play","getTracks","track","addTrack","alert","connected","ref","autoPlay","user_list","map","key","App","store","rootElement","document","getElementById","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.47bff173.chunk.js","sourcesContent":["import { createStore } from \"redux\";\nimport reducer from \"./reducer\"\n\nexport default createStore(reducer, {\n    RTC: new RTCPeerConnection(),\n    calling: { calling_status: false, calling_profile: { name: '' } },\n    incoming_call: {\n        incoming_call: false,\n        name: '', // sender user name\n        client: '', // receive socket id\n        call_back: '', // custom callback url\n        RTCSessionDescriptionInit: '' // the Session Description \n    },\n    socket: null,\n    user: { name: 'Masud Alam', socket_id: null },\n    users: [\n        { name: 'Siam Mridha', socket_id: 'fdsfsdfsdfsdfsd' },\n        { name: 'Kawser Kham', socket_id: 'fdsfsdfsadsdfsdfsd' },\n        { name: 'Masud Alam', socket_id: 'fdsfsdfdsafsdfsdfsd' }\n    ]\n})","export default (state, { type, payload }) => {\n  switch (type) {\n    case \"CREATE-SOCKET-CONNECTION\":\n      return { ...state, socket: payload };\n    case \"UPDATE-USER-NAME\":\n      return { ...state, user: { ...state.user, name: payload } };\n    case \"SET-USERS\":\n      return { ...state, users: payload }\n    case \"ADD-USER\":\n      return { ...state, users: [...state.users, payload] };\n    case \"DELETE-USER\":\n      return { ...state, users: state.users.filter((user) => user.socket_id === payload) }\n    case \"CALLING\":\n      return { ...state, calling: { ...state.calling, ...payload } }\n    case \"CALL-END\":\n      return { ...state, calling: { ...state.calling, ...payload } }\n    case \"INCOMING-CALL\":\n      return { ...state, incoming_call: { ...state.incoming_call, ...payload } }\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport webSocket from '../web-socket-client'\n\nconst Authentication = (props) => {\n    const name = useSelector(state => state.user.name)\n    const Socket = useSelector(state => state.socket)\n    const dispatch = useDispatch()\n    const handelConnect = () => {\n        if (name) {\n            console.log(name)\n            const newSocket = webSocket(`wss://6d6qoei593.execute-api.us-east-2.amazonaws.com/Prod/?name=${name}`)\n            newSocket.onConnect((e) => {\n                console.log('onConnect ', e)\n                dispatch({ type: \"CREATE-SOCKET-CONNECTION\", payload: newSocket })\n            })\n        }\n    }\n    const handleChange = (e) => {\n        dispatch({\n            type: \"UPDATE-USER-NAME\",\n            payload: e.target.value\n        })\n    }\n    return (\n        <React.Fragment>\n            {Socket ? props.children :\n                < div >\n                    <div>Enter Your Name</div>\n                    <input onChange={handleChange} value={name} />\n                    <button onClick={handelConnect}>Connect</button>\n                </div>\n            }\n        </React.Fragment >\n    );\n};\n\nexport default React.memo(Authentication)\n","export default (url) => {\n    let socket = new WebSocket(url)\n\n    const onConnect = (call_back) => {\n        socket.onopen = (event) => {\n            call_back(event)\n        }\n    }\n\n    const onError = (call_back) => {\n        socket.onerror = (event) => {\n            call_back(event)\n        }\n    }\n\n    const onClose = (call_back) => {\n        socket.onclose = (event) => {\n            call_back(event)\n        }\n    }\n\n    const on = (action, call_back, signal) => {\n        const listener = (e) => {\n            const { data, event } = e.detail\n            call_back(data, event)\n            if (signal) {\n                window.removeEventListener(action, listener)\n            }\n        }\n\n        socket.onmessage = (event) => {\n            // console.log(event)\n            try {\n                const data = JSON.parse(event.data)\n                if (call_back && data.action) {\n                    const e = new CustomEvent(data.action, { detail: { data: data.data, event } })\n                    window.dispatchEvent(e)\n                }\n            } catch (err) {\n\n            }\n        }\n\n        window.addEventListener(action, listener)\n    }\n\n    const send = (action, data, callbackFunction) => {\n        const callback = `${data && data.call_back ? data.call_back : `${action}callback`}`\n        data = {\n            ...data,\n            call_back: callback\n        }\n        socket.send(JSON.stringify({ action, data }))\n        if (callbackFunction) {\n            on(callback, callbackFunction, true)\n        }\n    }\n\n    return { on, send, onConnect, onClose, onError }\n}","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport styles from './call.module.css'\n\nconst Call = () => {\n    const user = useSelector(state => state.user)\n    const { calling_profile } = useSelector(state => state.calling)\n    const rtc = useSelector(state => state.RTC)\n    const dispatch = useDispatch()\n    const Socket = useSelector(state => state.socket)\n\n    useEffect(() => {\n        rtc.createOffer({ offerToReceiveVideo: 1 })\n            .then((sdp) => {\n                // set answer sdp as local description\n                rtc.setLocalDescription(sdp)\n                // console.log(JSON.stringify(sdp))\n                const data = {\n                    name: user.name, // sender user name\n                    client: calling_profile.socket_id, // receive socket id\n                    call_back: `call-answer${calling_profile.socket_id}`, // custom callback url\n                    RTCSessionDescriptionInit: sdp, // the Session Description\n                }\n                Socket.send('call', data, (args) => {\n                    rtc.setRemoteDescription(new RTCSessionDescription(args.RTCSessionDescriptionInit))\n                        .then(() => {\n                            rtc.addIceCandidate(new RTCIceCandidate(args.IceCandidate))\n                                .catch((error) => {\n                                    console.log('addCandidate', error)\n                                })\n                        })\n                        .catch((error) => {\n                            console.log('setRemoteDescription', error)\n                        })\n                    // console.log('call-answer ', args)\n                })\n            }).catch((error) => {\n                console.log('createOffer', error)\n            })\n\n        rtc.addEventListener('connectionstatechange', (e) => {\n            if (e.currentTarget.connectionState === \"connected\") {\n                console.log('connected')\n                dispatch({ type: \"CALL-END\", payload: { calling_status: false, calling_profile: null } })\n            }\n        })\n    })\n\n    const callEnd = () => {\n        dispatch({ type: \"CALL-END\", payload: { calling_status: false, calling_profile: null } })\n    }\n\n    return (\n        <div className={styles.calling_modal}>\n            <div className={styles.calling_info}>\n                <p className={styles.calling_info_name}>{calling_profile.name}</p>\n                Connecting...\n            </div>\n            <button className={styles.calling_end} onClick={callEnd}>End</button>\n        </div>\n    );\n};\n\nexport default React.memo(Call)\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\"\nimport styles from './call-respond.module.css'\n\nconst CallRespond = (props) => {\n    const rtc = useSelector(state => state.RTC)\n    const { name, client, call_back, RTCSessionDescriptionInit } = useSelector(state => state.incoming_call)\n    const Socket = useSelector(state => state.socket)\n    const dispatch = useDispatch()\n\n    const callAccept = () => {\n        // retrieve and parse the SDP copied from the remote peer\n        // set sdp as remote description\n        rtc.setRemoteDescription(new RTCSessionDescription(RTCSessionDescriptionInit))\n            .then(() => {\n                rtc.createAnswer({ offerToReceiveVideo: 1 })\n                    .then((sdp) => {\n                        // set answer sdp as local description\n                        rtc.setLocalDescription(sdp)\n                        // console.log(JSON.stringify(sdp))\n                        rtc.addEventListener('icecandidate', (e) => {\n                            if (e.candidate) {\n                                Socket.send(call_back, {\n                                    client, // receive socket id\n                                    RTCSessionDescriptionInit: sdp, // the Session Description \n                                    IceCandidate: e.candidate,\n                                })\n                                // console.log('ICE Candidate:', JSON.stringify(e.candidate))\n                            }\n                        })\n\n                    }).catch((error) => {\n                        console.log('createAnswer', error)\n                    })\n            }).catch((error) => {\n                console.log('setRemoteDescription', error)\n            })\n        rtc.addEventListener('connectionstatechange', (e) => {\n            if (e.currentTarget.connectionState === \"connected\") {\n                console.log('connected')\n                dispatch({ type: \"INCOMING-CALL\", payload: { incoming_call: false } })\n            }\n        })\n    }\n\n    const callDecline = () => {\n        dispatch({ type: \"INCOMING-CALL\", payload: { incoming_call: false } })\n    }\n\n    return (\n        <div className={styles.calling_modal}>\n            <div className={styles.calling_info}>\n                <p className={styles.calling_info_name}>{name}</p>\n                Incoming Calling...\n            </div>\n            <button className={styles.calling_accept} onClick={callAccept}>Accept</button>\n            <button className={styles.calling_decline} onClick={callDecline}>Decline</button>\n        </div>\n    );\n};\n\nexport default React.memo(CallRespond)\n","import React, { useRef, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport styles from './connected.module.css'\nimport Call from '../call/call'\nimport CallRespond from '../call-respond/call-respond'\n\nconst Connected = () => {\n    const video = useRef(null)\n    const { calling_status } = useSelector(state => state.calling)\n    const { incoming_call } = useSelector(state => state.incoming_call)\n    const rtc = useSelector(state => state.RTC)\n    const users = useSelector(state => state.users)\n    const Socket = useSelector(state => state.socket)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        Socket.onError((event) => {\n            console.log('onError ', event)\n        })\n        Socket.send('get-users', null, (event) => {\n            dispatch({ type: \"SET-USERS\", payload: event.users })\n        })\n        Socket.on('user-connected', ({ name, from }) => {\n            dispatch({ type: \"ADD-USER\", payload: { socket_id: from, name } })\n        })\n        Socket.on('user-disconnected', ({ from }) => {\n            dispatch({ type: \"DELETE-USER\", payload: from })\n        })\n        Socket.on('call', (args) => {\n            dispatch({ type: \"INCOMING-CALL\", payload: { incoming_call: true, ...args } })\n        })\n        rtc.addEventListener('track', ({ streams: [stream] }) => {\n            console.log('streams:', stream)\n            video.current.srcObject = stream\n            video.current.muted = false\n        })\n        // rtc.addEventListener('iceconnectionstatechange', (e) => {\n        //     console.log('IC Connection State Change:', e)\n        // })\n        rtc.addEventListener('icecandidateerror', (e) => {\n            console.log('IC Candidate Error:', e)\n        })\n\n        navigator.mediaDevices.getUserMedia({ audio: true, video: { height: window.outerHeight } })\n            .then((stream) => {\n                video.current.srcObject = stream\n                video.current.setAttribute(\"playsinline\", true);\n                // video.current.setAttribute(\"controls\", true);\n                video.current.onloadedmetadata = (e) => {\n                    video.current.play()\n                }\n                for (const track of stream.getTracks()) {\n                    rtc.addTrack(track, stream)\n                }\n            }).catch((error) => {\n                alert(`getUserMedia() error: ${error}`)\n            })\n    }, [Socket, dispatch, rtc])\n\n    const call = (client) => {\n        dispatch({ type: \"CALLING\", payload: { calling_status: true, calling_profile: client } })\n    }\n\n    return (\n        <div className={styles.connected}>\n            <video className={styles.video} ref={video} autoPlay muted />\n            <div className={styles.user_list}>\n                {users.map((user) =>\n                    <button key={user.socket_id} onClick={() => call(user)}>\n                        Call {user.name}\n                    </button>\n                )}\n            </div>\n            {calling_status && <Call />}\n            {incoming_call && <CallRespond />}\n        </div>\n    );\n};\n\nexport default React.memo(Connected)\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport Authentication from './authentication/authentication'\nimport Connected from './connected/connected'\n\n\nconst App = () => {\n    return (\n        <Provider store={store}>\n            <Authentication >\n                <Connected />\n            </Authentication>\n        </Provider>\n    );\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from './components/app'\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calling_modal\":\"call-respond_calling_modal__2-Um5\",\"calling_info\":\"call-respond_calling_info__3AiDw\",\"calling_info_name\":\"call-respond_calling_info_name__2AcYm\",\"calling_accept\":\"call-respond_calling_accept__1KCtJ\",\"calling_decline\":\"call-respond_calling_decline__29uPU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calling_modal\":\"call_calling_modal__2mgzD\",\"calling_info\":\"call_calling_info__3WoZA\",\"calling_info_name\":\"call_calling_info_name__4iY9T\",\"calling_end\":\"call_calling_end__3nvRh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"connected\":\"connected_connected__3IFXd\",\"video\":\"connected_video__2HNgJ\",\"user_list\":\"connected_user_list__2qh8p\"};"],"sourceRoot":""}